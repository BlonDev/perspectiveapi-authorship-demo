{
  "version": 3,
  "file": "conversationai-perspectiveapi-authorship-demo.js",
  "sources": [
    "ng://@conversationai/perspectiveapi-authorship-demo/out/src/app/modules/convai-checker/convai-checker.module.ts",
    "ng://@conversationai/perspectiveapi-authorship-demo/out/src/app/modules/convai-checker/convai-checker.component.ts",
    "ng://@conversationai/perspectiveapi-authorship-demo/out/src/app/modules/convai-checker/perspectiveapi.service.ts",
    "ng://@conversationai/perspectiveapi-authorship-demo/out/src/app/modules/convai-checker/perspective-status.component.ts"
  ],
  "sourcesContent": [
    "import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { APP_BASE_HREF } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport {\n  MatButtonModule,\n  MatInputModule,\n} from '@angular/material';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { PerspectiveStatus } from './perspective-status.component';\nimport { PerspectiveApiService } from './perspectiveapi.service';\nimport { ConvaiChecker } from './convai-checker.component';\n\n@NgModule({\n  declarations: [\n    ConvaiChecker,\n    PerspectiveStatus,\n  ],\n  exports: [\n    ConvaiChecker,\n    PerspectiveStatus\n  ],\n  imports: [\n    BrowserAnimationsModule,\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n  ],\n  providers: [PerspectiveApiService, {provide: APP_BASE_HREF, useValue: '/'},],\n  bootstrap: [ConvaiChecker]\n})\nexport class ConvaiCheckerModule { }\n",
    "/*\nCopyright 2017 Google Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\nimport { Injectable } from '@angular/core';\nimport { PerspectiveStatus, CommentFeedback, LoadingIconStyle } from './perspective-status.component';\nimport { PerspectiveApiService } from './perspectiveapi.service';\nimport {\n  AnalyzeCommentResponse,\n  SpanScores,\n  SuggestCommentScoreResponse,\n} from './perspectiveapi-types'\nimport { Subscription } from 'rxjs';\nimport { map, finalize } from 'rxjs/operators';\n\nexport interface InputEvent {\n  target: HTMLInputElement;\n}\n\nexport interface DemoSettings {\n  // Refers to the correction UI style. Current options are \"default\" or\n  // \"external\" (see perspective-status.ConfigurationInput).\n  configuration: string;\n\n  // An array of colors to use as the gradient for the animated loading widget.\n  // Minimum length is two, but there is no maximum length.\n  gradientColors: string[];\n\n  // Optional. API key to use when using the Gapi endpoint. Should be empty or\n  // omitted when not using the Gapi endpoint.\n  apiKey?: string;\n\n  // Whether to use the Gapi endpoint.\n  useGapi: boolean;\n\n  // Whether to use the plugin endpoint.\n  usePluginEndpoint: boolean;\n\n  // Whether to show the model score in the UI.\n  showPercentage: boolean;\n\n  // Determines whether “More info” link is visible.\n  showMoreInfoLink: boolean;\n\n  // Three feedback messages to display to the user. These can contain emoji\n  // unicode. This must be length 3.\n  feedbackText: [string, string, string];\n\n  // The numeric thresholds for showing each severity. Index 0 contains the\n  // minimum threshold to show scores. Index 1 is the threshold for medium\n  // severity, and index 2 is the threshold for high severity. Note that if you\n  // want only scores with medium severity to be shown (and never scores for\n  // low severity), indices 0 and 1 should have the same value.\n  scoreThresholds: [number, number, number];\n\n  // Whether to hide the loading icon after loading completes; this will allow\n  // for loading animation to play, but no circle/square/diamond will be\n  // present after the loading finishes.\n  hideLoadingIconAfterLoad: boolean;\n\n  // Whether to hide the loading icon when the score is below the minimum\n  // threshold to show feedback (index 0 of scoreThresholds).\n  hideLoadingIconForScoresBelowMinThreshold: boolean;\n\n  // Whether to always hide the loading icon (results in only showing the text\n  // feedback and never showing loading animation).\n  alwaysHideLoadingIcon: boolean;\n\n  // The loading icon style. See perspective-status.LoadingIconStyle for\n  // options.\n  loadingIconStyle: string;\n\n  // The string to use to prompt users to submit feedback.\n  userFeedbackPromptText: string;\n\n  // An id for the community using the checker.\n  communityId?: string;\n}\n\nexport const DEFAULT_DEMO_SETTINGS = {\n  configuration: 'default',\n  gradientColors: [\"#25C1F9\", \"#7C4DFF\", \"#D400F9\"],\n  apiKey: '',\n  useGapi: false,\n  usePluginEndpoint: false,\n  showPercentage: true,\n  showMoreInfoLink: true,\n  feedbackText: [\n    'Unlikely to be perceived as toxic',\n    'Unsure if this will be perceived as toxic',\n    'Likely to be perceived as toxic'\n  ] as [string, string, string],\n  scoreThresholds: [0, 0.4, 0.7] as [number, number, number],\n  hideLoadingIconAfterLoad: false,\n  hideLoadingIconForScoresBelowMinThreshold: false,\n  alwaysHideLoadingIcon: false,\n  loadingIconStyle: LoadingIconStyle.CIRCLE_SQUARE_DIAMOND,\n  userFeedbackPromptText: 'Seem wrong?'\n};\n\n@Component({\n  selector: 'convai-checker',\n  template: `<div id=\"checkerContainer\">\n  <!-- TODO(rachelrosen): merge perspective-status and convai-checker\n       and move a large portion of the convai-checker code to the perspective-api service. -->\n  <perspective-status\n    [fontSize]=\"fontSize\"\n    [indicatorWidth]=\"13\"\n    [indicatorHeight]=\"13\"\n    [gradientColors]=\"demoSettings.gradientColors\"\n    [scoreThresholds]=\"demoSettings.scoreThresholds\"\n    [feedbackText]=\"demoSettings.feedbackText\"\n    [configurationInput]=\"demoSettings.configuration\"\n    [showPercentage]=\"demoSettings.showPercentage\"\n    [showMoreInfoLink]=\"demoSettings.showMoreInfoLink\"\n    [hasScore]=\"analyzeCommentResponse !== null\"\n    [canAcceptFeedback]=\"canAcceptFeedback\"\n    [feedbackRequestInProgress]=\"feedbackRequestInProgress\"\n    [initializeErrorMessage]=\"initializeErrorMessage\"\n    [analyzeErrorMessage]=\"analyzeErrorMessage\"\n    [userFeedbackPromptText]=\"demoSettings.userFeedbackPromptText\"\n    [hideLoadingIconAfterLoad]=\"demoSettings.hideLoadingIconAfterLoad\"\n    [hideLoadingIconForScoresBelowMinThreshold]=\"demoSettings.hideLoadingIconForScoresBelowMinThreshold\"\n    [alwaysHideLoadingIcon]=\"demoSettings.alwaysHideLoadingIcon\"\n    [loadingIconStyle]=\"demoSettings.loadingIconStyle\"\n    (commentFeedbackSubmitted)=\"onCommentFeedbackReceived($event)\"\n    (scoreChangeAnimationCompleted)=\"handleScoreChangeAnimationCompleted()\"\n    (modelInfoLinkClicked)=\"handleModelInfoLinkClicked()\">\n  </perspective-status>\n</div>\n`,\n  styles: [`#checkerContainer{font-family:Roboto,sans-serif;line-height:1}`],\n  providers: [PerspectiveApiService],\n  // Allows listening to input events outside of this component.\n  host: {\n    '(document:input)': '_handleInputEvent($event)',\n  },\n})\nexport class ConvaiChecker implements OnInit, OnChanges {\n  @ViewChild(PerspectiveStatus) statusWidget: PerspectiveStatus;\n  @Input() inputId: string;\n  @Input() serverUrl: string;\n  @Input() fontSize: number = 12;\n  @Input() demoSettings: DemoSettings = DEFAULT_DEMO_SETTINGS;\n  // A JSON string representation of the DemoSettings. Expected to be static\n  // over the course of the component's lifecycle, and should only be used from\n  // a non-Angular context (when convai-checker is being used as a\n  // webcomponent). If working from an Angular context, use |demoSettings|.\n  @Input() demoSettingsJson: string|null = null;\n  @Input() pluginEndpointUrl = 'http://perspectiveapi.com';\n  @Output() scoreChangeAnimationCompleted: EventEmitter<void> = new EventEmitter<void>();\n  @Output() scoreChanged: EventEmitter<number> = new EventEmitter<number>();\n  @Output() modelInfoLinkClicked: EventEmitter<void> = new EventEmitter<void>();\n  @Output() analyzeCommentResponseChanged: EventEmitter<AnalyzeCommentResponse|null> =\n    new EventEmitter<AnalyzeCommentResponse|null>();\n  analyzeCommentResponse: AnalyzeCommentResponse|null = null;\n  private checkInProgress: boolean;\n  private mostRecentRequestSubscription: Subscription;\n  // Number is the return type of window.setTimeout(), which is used to update\n  // the pending request when the user is continuously typing, to not send too\n  // many requests that will be ignored.\n  private pendingRequest: number;\n  private lastRequestedText: string;\n  private lastPendingRequestedText: string;\n  private inputListener: EventListener;\n  public initializeErrorMessage: string;\n  public analyzeErrorMessage: string|null = null;\n  public canAcceptFeedback: boolean = false;\n  public feedbackRequestInProgress: boolean = false;\n  private sessionId: string|null = null;\n  private gradientColors: string[] = [\"#25C1F9\", \"#7C4DFF\", \"#D400F9\"];\n  private apiKey: string|undefined;\n  private configuration: string;\n\n  constructor(\n      private elementRef: ElementRef,\n      private analyzeApiService: PerspectiveApiService\n  ) {\n    // Extracts attribute fields from the element declaration. This\n    // covers the case where this component is used as a root level\n    // component outside an angular component tree and we cannot get\n    // these values from data bindings.\n    this.inputId = this.elementRef.nativeElement.getAttribute('inputId');\n\n    // Default to '' to use same server as whatever's serving the webapp.\n    this.serverUrl =\n      this.elementRef.nativeElement.getAttribute('serverUrl') || '';\n  };\n\n  ngOnInit() {\n    if (!this.inputId) {\n      this.initializeErrorMessage = \"Error initializing: No input element id\"\n        + \" specified. Set inputId=<inputElementId> to use this component.\";\n      return;\n    }\n\n    if (this.demoSettingsJson) {\n      this.demoSettings = JSON.parse(this.demoSettingsJson);\n      if (this.demoSettings.apiKey) {\n        this.apiKey = this.demoSettings.apiKey;\n      }\n    }\n\n    if (this.apiKey) {\n      this.analyzeApiService.initGapiClient(this.apiKey);\n    }\n\n    this.sessionId = window.localStorage.getItem(LOCAL_STORAGE_SESSION_ID_KEY);\n    if (this.sessionId === null) {\n      this.sessionId = Math.round(Date.now() * Math.random()).toString();\n      window.localStorage.setItem(LOCAL_STORAGE_SESSION_ID_KEY, this.sessionId);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) : void {\n    if (changes['demoSettings']) {\n      if (this.demoSettings && this.demoSettings.apiKey &&\n          this.apiKey !== this.demoSettings.apiKey) {\n        console.debug('Api key changes detected in demoSettings');\n        this.apiKey = this.demoSettings.apiKey;\n        this.analyzeApiService.initGapiClient(this.apiKey);\n      }\n    }\n  }\n\n  // Public interface for manually checking text and updating the UI.\n  // Note that this does NOT change the contents of the text box. This\n  // is intended to be used for handling programmatic changes to the\n  // input box not caused by a user typing.\n  public checkText(text: string) {\n    this._handlePendingCheckRequest(text);\n  }\n\n  // Listens to input events from elements outside the component, and forwards\n  // the ones from the element with the desired input id into our check request\n  // handlers.\n  // TODO(rachelrosen): Consider using a CSS selector for this instead, for\n  // better specificity.\n  private _handleInputEvent(event: InputEvent) {\n    if (event.target.id === this.inputId) {\n      this._handlePendingCheckRequest(event.target.value);\n    }\n  }\n\n  private _handlePendingCheckRequest(text: string) {\n    // Don't make duplicate requests.\n    if (text === this.lastRequestedText ||\n        text === this.lastPendingRequestedText) {\n      console.debug('Duplicate request text ' + text + '; returning');\n      return;\n    }\n\n    // Clear any pending requests since data has changed.\n    console.debug('Clearing this.pendingRequest');\n    clearTimeout(this.pendingRequest);\n    this.analyzeErrorMessage = null;\n\n    // Text has been cleared, return to default state.\n    if (!text) {\n      this.analyzeCommentResponse = null;\n      this.analyzeCommentResponseChanged.emit(this.analyzeCommentResponse);\n      this.statusWidget.notifyScoreChange(0);\n      this.scoreChanged.emit(0);\n      this.canAcceptFeedback = false;\n      this.statusWidget.resetFeedback();\n      return;\n    }\n\n    this.lastPendingRequestedText = text;\n    this.statusWidget.setLoading(true);\n\n    // Use window.setTimeout() instead of just setTimeout() because\n    // Typescript gets confused about the typings when compiling for\n    // a development environment vs a testing environment (the former sees\n    // NodeJS.Timer while the latter sees number). Using window.setTimeout\n    // makes it consistently type number.\n    console.debug('Updating this.pendingRequest for text: ', text);\n    this.pendingRequest = window.setTimeout(() => {\n      this._checkText(text);\n    }, REQUEST_LIMIT_MS);\n\n  }\n\n  onCommentFeedbackReceived(feedback: CommentFeedback) {\n    if (this.analyzeCommentResponse === null) {\n      // Don't send feedback for an empty input box.\n      return;\n    }\n\n    this.suggestCommentScore(this.lastRequestedText, feedback);\n  }\n\n  handleScoreChangeAnimationCompleted() {\n    // Allow the output event to bubble up from the child checker-status\n    // component through this component.\n    this.scoreChangeAnimationCompleted.emit();\n    console.debug('Score animation completed! Emitting an event');\n  }\n\n  handleModelInfoLinkClicked() {\n    // Allow the output event to bubble up from the child checker-status\n    // component through this component.\n    this.modelInfoLinkClicked.emit();\n  }\n\n  suggestCommentScore(text: string, feedback: CommentFeedback): void {\n    this.feedbackRequestInProgress = true;\n    this.analyzeApiService.suggestScore(\n      text,\n      this.sessionId,\n      feedback.commentMarkedAsToxic,\n      this.demoSettings.useGapi /* makeDirectApiCall */,\n      this.serverUrl\n    ).pipe(finalize(() => {\n        console.debug('Feedback request done');\n        this.statusWidget.hideFeedbackQuestion();\n        this.feedbackRequestInProgress = false;\n      }))\n      .subscribe(\n        (response: SuggestCommentScoreResponse) => {\n          this.statusWidget.feedbackCompleted(true);\n          console.log(response);\n        },\n        (error: Error) => {\n          console.error('Error', error);\n          this.statusWidget.feedbackCompleted(false);\n        }\n      );\n  }\n\n  private _getErrorMessage(error: any): string {\n    let msg = 'Error scoring text. Please try again.';\n    // Look at detailed API error messages for more meaningful error to return.\n    try {\n      for (const api_err of error.json().errors) {\n        // TODO(jetpack): a small hack to handle the language detection failure\n        // case. we should instead change the API to return documented, typeful\n        // errors.\n        if (api_err.message.includes('does not support request languages')) {\n          msg = 'Sorry! Perspective needs more training data to work in this '\n            + 'language.';\n          break;\n        }\n      }\n    } catch (e) {\n      console.warn('Failed to parse error. ', e);\n    }\n    return msg;\n  }\n\n  private _checkText(text: string) {\n    // Cancel listening to callbacks of previous requests.\n    if (this.mostRecentRequestSubscription) {\n      this.mostRecentRequestSubscription.unsubscribe();\n    }\n\n    this.statusWidget.resetFeedback();\n\n    console.log('Checking text ' + text);\n\n    this.lastRequestedText = text;\n    this.checkInProgress = true;\n\n    this.mostRecentRequestSubscription =\n      this.analyzeApiService.checkText(\n          text,\n          this.sessionId,\n          this.demoSettings.communityId,\n          this.demoSettings.useGapi /* makeDirectApiCall */,\n          this.demoSettings.usePluginEndpoint ? this.pluginEndpointUrl : this.serverUrl)\n        .pipe(finalize(() => {\n          console.log('Request done');\n          let newScore = this.getMaxScore(this.analyzeCommentResponse);\n          this.statusWidget.notifyScoreChange(newScore);\n          this.scoreChanged.emit(newScore);\n          this.mostRecentRequestSubscription = null;\n        }))\n        .subscribe(\n          (response: AnalyzeCommentResponse) => {\n            this.analyzeCommentResponse = response;\n            this.analyzeCommentResponseChanged.emit(this.analyzeCommentResponse);\n            console.log(this.analyzeCommentResponse);\n            this.checkInProgress = false;\n            this.canAcceptFeedback = true;\n          },\n          (error) => {\n            console.error('Error', error);\n            this.checkInProgress = false;\n            this.canAcceptFeedback = false;\n            this.analyzeErrorMessage = this._getErrorMessage(error);\n            this.analyzeCommentResponse = null;\n          }\n        );\n  }\n\n  getMaxScore(response: AnalyzeCommentResponse): number {\n    if (response === null || response.attributeScores == null) {\n      return 0;\n    }\n    let max: number = undefined;\n    Object.keys(response.attributeScores).forEach((key: string) => {\n      let maxSpanScoreForAttribute =\n        this.getMaxSpanScore(response.attributeScores[key]);\n      if (max === undefined || maxSpanScoreForAttribute > max) {\n          max = maxSpanScoreForAttribute;\n      }\n    });\n\n    if (max === undefined) {\n      console.error('No \"value\" field found for score. Returning 0.');\n      max = 0;\n    }\n    return max;\n  }\n\n  getMaxSpanScore(spanScores: SpanScores): number {\n    let max: number = undefined;\n    for (let spanScore of spanScores.spanScores) {\n      if (max === undefined || spanScore.score.value > max) {\n        max = spanScore.score.value;\n      }\n    }\n    return max;\n  };\n}\n\nconst REQUEST_LIMIT_MS = 500;\nconst LOCAL_STORAGE_SESSION_ID_KEY = 'sessionId';\n",
    "/*\nCopyright 2017 Google Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { Observable, from } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport {\n  AnalyzeCommentData,\n  AnalyzeCommentRequest,\n  AnalyzeCommentResponse,\n  AttributeScores,\n  PerspectiveGapiClient,\n  RequestedAttributes,\n  SuggestCommentScoreData,\n  SuggestCommentScoreRequest,\n  SuggestCommentScoreResponse,\n} from './perspectiveapi-types'\n\n// TODO: Make this configurable for dev vs prod.\nconst DISCOVERY_URL = 'https://commentanalyzer.googleapis.com/$discovery'\n    + '/rest?version=v1alpha1';\nconst TOXICITY_ATTRIBUTE = 'TOXICITY';\n\n@Injectable()\nexport class PerspectiveApiService {\n\n  private gapiClient: PerspectiveGapiClient = null;\n\n  constructor(private http: Http) {}\n\n  initGapiClient(apiKey: string) {\n    if (!apiKey) {\n      this.gapiClient = null;\n    }\n    gapi.load('client', () => {\n      console.log('Starting to load gapi client');\n      (gapi.client as any).init({\n        'apiKey': apiKey,\n        'discoveryDocs': [ DISCOVERY_URL ],\n      }).then(() => {\n        console.log('Finished loading gapi client');\n        console.log(gapi.client);\n        this.gapiClient = (gapi.client as any) as PerspectiveGapiClient;\n      }, (error: Error) => {\n        console.error('Error loading gapi client:', error);\n      })});\n  }\n\n  checkText(text: string, sessionId: string, communityId: string,\n            makeDirectApiCall: boolean, serverUrl?: string)\n              : Observable<AnalyzeCommentResponse> {\n    if (makeDirectApiCall && this.gapiClient === null) {\n      console.error('No gapi client found; call initGapiClient with your API'\n                    + 'key to make a direct API call. Using server instead');\n      makeDirectApiCall = false;\n    }\n    if (makeDirectApiCall) {\n      console.debug('Making a direct API call with gapi');\n\n      let requestedAttributes: RequestedAttributes = {};\n      requestedAttributes[TOXICITY_ATTRIBUTE] = {};\n\n      let request: AnalyzeCommentRequest = {\n        comment: {text: text},\n        requested_attributes: requestedAttributes,\n        session_id: sessionId,\n        community_id: communityId\n      };\n      return from(\n         this.gapiClient.commentanalyzer.comments.analyze(request))\n         .pipe(map(response => response.result));\n    } else {\n      if (serverUrl === undefined) {\n        serverUrl = '';\n        console.error('No server url specified for a non-direct API call.'\n                      + ' Defaulting to current hosted address');\n      }\n\n      let headers = new Headers();\n      headers.append('Content-Type', 'application/json');\n\n      let data: AnalyzeCommentData = {\n        comment: text,\n        sessionId: sessionId,\n        communityId: communityId,\n      };\n      return this.http.post(\n        serverUrl + '/check', JSON.stringify(data), {headers})\n        .pipe(map(response => response.json()));\n    }\n  }\n\n  suggestScore(text: string, sessionId: string, commentMarkedAsToxic: boolean,\n               makeDirectApiCall: boolean, serverUrl?: string)\n      : Observable<SuggestCommentScoreResponse> {\n    if (makeDirectApiCall && this.gapiClient === null) {\n      console.error('No gapi client found; call initGapiClient with your API'\n                    + 'key to make a direct API call. Using server instead');\n      makeDirectApiCall = false;\n    }\n    if (makeDirectApiCall) {\n      let attributeScores: AttributeScores  = {};\n      attributeScores[TOXICITY_ATTRIBUTE] = {\n        summaryScore: { value: commentMarkedAsToxic ? 1 : 0 }\n      };\n      let request: SuggestCommentScoreRequest = {\n        comment: {text: text},\n        attribute_scores: attributeScores,\n        client_token: sessionId,\n      };\n      console.debug('Making a direct API call with gapi');\n      return from(\n         this.gapiClient.commentanalyzer.comments.suggestscore(request))\n         .pipe(map(response => response.result));\n    } else {\n      if (serverUrl === undefined) {\n        serverUrl = '';\n        console.error('No server url specified for a non-direct API call.'\n                      + ' Defaulting to current hosted address');\n      }\n      let headers = new Headers();\n      headers.append('Content-Type', 'application/json');\n\n      let data: SuggestCommentScoreData = {\n        comment: text,\n        sessionId: sessionId,\n        commentMarkedAsToxic: commentMarkedAsToxic\n      };\n\n      return this.http.post(\n        serverUrl + '/suggest_score', JSON.stringify(data), {headers})\n        .pipe(map(response => response.json()));\n    }\n  }\n}\n",
    "/*\nCopyright 2017 Google Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport {\n  AfterViewChecked,\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Injectable,\n  Input,\n  NgZone,\n  OnChanges,\n  Output,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport * as d3 from 'd3-interpolate';\nimport * as toxicLibsJS from 'toxiclibsjs';\nimport {Animation, Elastic, Power3, TimelineMax, TweenMax} from 'gsap';\nimport twemoji from 'twemoji';\n\nexport enum Shape {\n  CIRCLE,\n  SQUARE,\n  DIAMOND,\n};\n\nexport enum Emoji {\n  SMILE,\n  NEUTRAL,\n  SAD,\n};\n\nexport enum Configuration {\n  DEMO_SITE,\n  EXTERNAL,\n};\n\n// The keys in ConfigurationInput should match items in the Configuration enum.\nexport const ConfigurationInput = {\n  DEMO_SITE: 'default',\n  EXTERNAL: 'external',\n};\n\nexport const ScoreThreshold = {\n  OKAY: 0,\n  BORDERLINE: 0.20,\n  UNCIVIL: 0.76,\n  MAX: 1,\n};\n\nexport const LoadingIconStyle = {\n  CIRCLE_SQUARE_DIAMOND: 'circle_square_diamond',\n  EMOJI: 'emoji',\n};\n\nexport const DEFAULT_FEEDBACK_TEXT = 'likely to be perceived as \"toxic.\"';\n\nconst FADE_START_LABEL = \"fadeStart\";\nconst LOADING_START_ANIMATIONS_LABEL = \"loadingAnimationStart\";\nconst SHAPE_MORPH_TIME_SECONDS = 1;\nconst FADE_DETAILS_TIME_SECONDS = 0.4;\nconst FADE_ANIMATION_TIME_SECONDS = 0.3;\nconst GRAYSCALE_ANIMATION_TIME_SECONDS = 0.2\nconst LAYER_TRANSITION_TIME_SECONDS = 0.5;\nconst FADE_WIDGET_TIME_SECONDS = 0.4;\nconst WIDGET_PADDING_PX = 4;\nconst WIDGET_RIGHT_MARGIN_PX = 10;\nconst EMOJI_MAIN_LOADING_ANIMATION_LABEL = \"emojiMainLoadingAnimation\";\nconst FADE_EMOJI_TIME_SECONDS = 0.5;\nconst EMOJI_BOUNCE_IN_TIME_SECONDS = 1;\nconst COLOR_CHANGE_LOADING_ANIMATION_TIME_SECONDS = 0.5;\nconst FIRST_GRADIENT_RATIO = 0.9;\nconst QUICK_COLOR_CHANGE_LOADING_ANIMATION_TIME_SECONDS = 0.2;\nconst NEUTRAL_GRAY_COLOR = '#cccccc';\nconst GRAY_COLOR_CIRCLE_LOADING = \"rgba(227,229,230,1)\";\nconst EMOJI_COLOR = \"#ffcc4d\";\n\n@Component({\n  selector: 'perspective-status',\n  template: `<div #widgetContainer id=\"widgetContainer\" class=\"horizontal-container\">\n  <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\n        rel=\"stylesheet\">\n  <!-- For items that need to be animated, hidden is used instead of *ngIf.\n       This is because *ngIf removes items from the DOM, which means they\n       cannot be found when the component is initializing if their display\n       conditions are not met. -->\n  <div id=\"animationContainer\">\n    <div *ngIf=\"loadingIconStyle === loadingIconStyleConst.CIRCLE_SQUARE_DIAMOND\"\n         id=\"circleSquareDiamondLoadingIconContainer\">\n      <div\n           #circleSquareDiamondWidget\n           id=\"circleSquareDiamondWidget\"\n           class=\"dot\"\n           [style.width]=\"indicatorWidth\"\n           [style.height]=\"indicatorHeight\"\n           [hidden]=\"shouldHideStatusWidget || alwaysHideLoadingIcon\"\n           [attr.aria-hidden]=\"shouldHideStatusWidget || isPlayingShowOrHideLoadingWidgetAnimation || alwaysHideLoadingIcon\"\n           [attr.aria-label]=\"getAnimationA11yLabel(loadingIconStyle, isPlayingLoadingAnimation)\"\n           tabindex=0>\n      </div>\n    </div>\n    <div *ngIf=\"loadingIconStyle === loadingIconStyleConst.EMOJI\">\n      <div\n           #emojiStatusWidget\n           id=\"emojiStatusWidget\"\n           class=\"dot emojiWidget\"\n           tabindex=0\n           [attr.aria-label]=\"getAnimationA11yLabel(loadingIconStyle, isPlayingLoadingAnimation)\">\n        <img #smileEmoji id=\"smileEmoji\" class=\"iconEmoji\"\n             [ngClass]=\"{hiddenEmoji: hideEmojiIconsForLoadingAnimation || score >= scoreThresholds[1]}\"\n             src=\"assets/grinning_face.png\">\n        <img #neutralEmoji id=\"neutralEmoji\" class=\"iconEmoji\"\n             [ngClass]=\"{hiddenEmoji: hideEmojiIconsForLoadingAnimation || (score < scoreThresholds[1] || score >= scoreThresholds[2])}\"\n             src=\"assets/thinking_face.png\">\n        <img #sadEmoji id=\"sadEmoji\" class=\"iconEmoji\"\n             [ngClass]=\"{hiddenEmoji: hideEmojiIconsForLoadingAnimation || score < scoreThresholds[2]}\"\n             src=\"assets/disappointed_face.png\">\n      </div>\n    </div>\n  </div>\n\n  <div class=\"layersContainer\">\n    <!-- TODO(rachelrosen): Check the necessity of specifying aria-hidden here and elsewhere. -->\n    <div id=\"layer1\" [ngClass]=\"{'horizontal-container': true,\n                                 'detailsContainer': true,\n                                 'layer': true,\n                                 'hiddenLayer': !layersAnimating && currentLayerIndex !== 0}\"\n                     [attr.aria-hidden]=\"currentLayerIndex !== 0\">\n      <div id=\"layerText\" class=\"layerText\">\n        <!-- For layer 1 text, configurations EXTERNAL and DEMO_SITE are the same.-->\n        <div>\n          <div id=\"noBorderButtonscoreInfo\"\n               class=\"widgetText\"\n               *ngIf=\"hasScore && !analyzeErrorMessage && shouldShowFeedback(score)\"\n               [style.fontSize]=\"fontSize\"\n               tabindex=0\n               role=\"status\"\n               [attr.aria-hidden]=\"!showScore || isPlayingLoadingAnimation || isPlayingFadeDetailsAnimation\">\n            <span id=\"feedbackText\" [innerHTML]=\"parseEmojis(getFeedbackTextForScore(score))\"></span><span *ngIf=\"showPercentage\" id=\"percentage\">({{score.toFixed(2)}})</span><span\n               *ngIf=\"showMoreInfoLink\"\n               class=\"link\"\n               role=\"link\"\n               tabindex=0\n               (keyup.enter)=\"notifyModelInfoLinkClicked()\"\n               (keyup.space)=\"notifyModelInfoLinkClicked()\"\n               (click)=\"notifyModelInfoLinkClicked()\">Learn more</span>\n          </div>\n\n          <div class=\"error\" *ngIf=\"initializeErrorMessage\">\n            {{initializeErrorMessage}}\n          </div>\n          <div class=\"error\" *ngIf=\"analyzeErrorMessage\">\n            {{analyzeErrorMessage}}\n          </div>\n        </div><!-- End configuration DEMO_SITE or EXTERNAL -->\n\n      </div> <!-- End layerText -->\n\n      <div class=\"interactiveElement\">\n        <div *ngIf=\"configuration === configurationEnum.EXTERNAL\">\n          <div id=\"infoButtonContainer\" class=\"infoButtonContainer\">\n            <button *ngIf=\"hasScore && shouldShowFeedback(score)\"\n              id=\"infoButton\"\n              class=\"infoButton\"\n              role=\"button\"\n              aria-label=\"Show score details\"\n              [disabled]=\"!showScore || isPlayingLoadingAnimation || layersAnimating\"\n              (click)=\"setShowMoreInfo(true)\"\n              tabindex=0>\n              <i class=\"material-icons md-dark md-18\">info</i>\n            </button>\n          </div>\n        </div> <!-- End configuration EXTERNAL-->\n\n        <div *ngIf=\"configuration === configurationEnum.DEMO_SITE\">\n          <button id=\"seemWrongButtonDemoConfig\"\n               *ngIf=\"canAcceptFeedback && shouldShowFeedback(score)\"\n               role=\"button\"\n               class=\"seemWrongButton purpleButton noBorderButton\"\n               [style.fontSize]=\"fontSize\"\n               [disabled]=\"!showScore || isPlayingLoadingAnimation || layersAnimating\"\n               (click)=\"feedbackContainerClicked()\"\n               tabindex=0>\n            {{userFeedbackPromptText}}\n          </button>\n        </div>\n\n      </div> <!-- End interactiveElement -->\n    </div> <!-- End layer1 -->\n\n    <div id=\"layer2\" [ngClass]=\"{'horizontal-container': true,\n                                 'detailsContainer': true,\n                                 'layer': true,\n                                 'hiddenLayer': !layersAnimating && currentLayerIndex !== 1}\"\n                     [attr.aria-hidden]=\"currentLayerIndex !== 1\">\n\n      <div class=\"layerText\">\n        <div *ngIf=\"configuration === configurationEnum.EXTERNAL\">\n          <div id=\"detailedScoreInfo\"\n               class=\"widgetText\"\n               role=\"status\"\n               tabindex=0>\n            <span>Scored {{(score.toFixed(2) * 100).toFixed(0)}}% by the <a href=\"https://conversationai.github.io/\">Perspective \"Toxicity\" analyzer</a>\n            </span>\n          </div>\n        </div> <!-- End configuration EXTERNAL-->\n\n        <div *ngIf=\"configuration === configurationEnum.DEMO_SITE\">\n          <div class=\"widgetText\"\n            tabindex=0>\n            <span>Is this comment\n              <span class=\"link\"\n                    role=\"link\"\n                    tabindex=0\n                    (keyup.enter)=\"notifyModelInfoLinkClicked()\"\n                    (keyup.space)=\"notifyModelInfoLinkClicked()\"\n                    (click)=\"notifyModelInfoLinkClicked()\">toxic</span>?\n            </span>\n          </div>\n        </div> <!-- End configuration DEMO_SITE -->\n\n      </div> <!-- End layerText -->\n\n      <div class=\"interactiveElement\">\n\n        <div *ngIf=\"configuration === configurationEnum.EXTERNAL\">\n          <div class=\"horizontal-container\">\n            <div class=\"feedbackContainer widgetText\"\n                 [style.fontSize]=\"fontSize\"\n                 [attr.aria-hidden]=\"!showScore || isPlayingLoadingAnimation\">\n              <button id=\"seemWrongButton\"\n                   *ngIf=\"canAcceptFeedback && !showFeedbackQuestion\n                      && !feedbackRequestInProgress && !feedbackRequestSubmitted && !feedbackRequestError\"\n                   role=\"button\"\n                   class=\"seemWrongButton greyButton noBorderButton\"\n                   [style.fontSize]=\"fontSize\"\n                   [disabled]=\"!showScore || isPlayingLoadingAnimation || layersAnimating\"\n                   (click)=\"feedbackContainerClicked()\"\n                   tabindex=0>\n                {{userFeedbackPromptText}}\n              </button>\n              <div id=\"seemWrongQuestion\" *ngIf=\"showFeedbackQuestion && !feedbackRequestInProgress\">\n                <div class=\"feedbackQuestion widgetText\" tabindex=0>Is this text toxic?</div>\n                <div class=\"yesNoButtonContainer horizontal-container\">\n                  <div>\n                    <button\n                      id=\"yesButtonExternalConfig\"\n                      class=\"yesNoButton greyButton underlineButton noBorderButton\"\n                      role=\"button\"\n                      [style.fontSize]=\"fontSize\"\n                      [disabled]=\"!showScore || isPlayingLoadingAnimation || layersAnimating\"\n                      (click)=\"submitFeedback(true)\"\n                      tabindex=0>\n                      Yes\n                    </button>\n                  </div>\n                  <div>\n                    <button\n                      id=\"noButtonExternalConfig\"\n                      class=\"yesNoButton greyButton underlineButton noBorderButton\"\n                      role=\"button\"\n                      [style.fontSize]=\"fontSize\"\n                      [disabled]=\"!showScore || isPlayingLoadingAnimation || layersAnimating\"\n                      (click)=\"submitFeedback(false)\"\n                      tabindex=0>\n                      No\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <div id=\"feedbackSubmitting\"\n                   tabindex=0\n                   role=\"status\"\n                   *ngIf=\"feedbackRequestInProgress\">\n                Sending...\n              </div>\n              <div id=\"feedbackThanks\"\n                   tabindex=0\n                   role=\"status\"\n                   *ngIf=\"feedbackRequestSubmitted\">\n                Thanks for the feedback!\n              </div>\n              <div *ngIf=\"feedbackRequestError\">\n                <button\n                     class=\"error noBorderButton\"\n                     role=\"button\"\n                     [style.fontSize]=\"fontSize\"\n                     (click)=\"resetFeedback()\"\n                     tabindex=0>\n                  Error submitting feedback. Click to try again.\n                </button>\n              </div>\n            </div>\n            <div id=\"infoButtonContainer\" class=\"infoButtonContainer\">\n              <button *ngIf=\"hasScore\"\n                id=\"cancelButton\"\n                class=\"infoButton\"\n                role=\"button\"\n                aria-label=\"Hide score details\"\n                [disabled]=\"!showScore || isPlayingLoadingAnimation || layersAnimating\"\n                (click)=\"setShowMoreInfo(false)\"\n                tabindex=0>\n                <i class=\"material-icons md-dark md-18\">cancel</i>\n              </button>\n            </div>\n          </div>\n        </div> <!-- End configuration EXTERNAL -->\n\n        <div *ngIf=\"configuration === configurationEnum.DEMO_SITE\">\n          <div class=\"yesNoButtonContainer horizontal-container\"\n               *ngIf=\"!feedbackRequestInProgress && !feedbackRequestSubmitted && !feedbackRequestError\">\n            <div>\n              <button\n                id=\"yesButtonDemoConfig\"\n                class=\"yesNoButton purpleButton noBorderButton\"\n                role=\"button\"\n                [style.fontSize]=\"fontSize\"\n                [disabled]=\"!showScore || isPlayingLoadingAnimation || layersAnimating\"\n                (click)=\"submitFeedback(true)\"\n                tabindex=0>\n                Yes\n              </button>\n            </div>\n            <div>\n              <button\n                id=\"noButtonDemoConfig\"\n                class=\"yesNoButton purpleButton noBorderButton\"\n                role=\"button\"\n                [style.fontSize]=\"fontSize\"\n                [disabled]=\"!showScore || isPlayingLoadingAnimation || layersAnimating\"\n                (click)=\"submitFeedback(false)\"\n                tabindex=0>\n                No\n              </button>\n            </div>\n          </div>\n        </div> <!-- End configuration DEMO_SITE -->\n\n      </div> <!-- End layer2 interactive element -->\n\n    </div> <!-- End layer2 -->\n\n    <div id=\"layer3\" [ngClass]=\"{'horizontal-container': true,\n                                 'detailsContainer': true,\n                                 'hiddenLayer': !layersAnimating && currentLayerIndex !== 2}\">\n      <div class=\"interactiveElement\">\n\n        <div *ngIf=\"configuration === configurationEnum.DEMO_SITE\">\n            <div id=\"feedbackThanksDemoConfig\"\n                 class=\"widgetText\"\n                 tabindex=0\n                 role=\"status\"\n                 *ngIf=\"feedbackRequestSubmitted\">\n              <button\n                id=\"thanksForFeedbackButtonDemoConfig\"\n                class=\"noBorderButton feedbackResponseButton widgetText\"\n                role=\"button\"\n                (click)=\"resetLayers()\">\n                Thanks for your feedback!\n              </button>\n            </div>\n            <div *ngIf=\"feedbackRequestError\">\n              <button\n                   class=\"error noBorderButton feedbackResponseButton\"\n                   role=\"button\"\n                   [style.fontSize]=\"fontSize\"\n                   (click)=\"resetLayers()\"\n                   tabindex=0>\n                Error submitting feedback. Click to try again.\n              </button>\n            </div>\n        </div> <!-- End configuration DEMO_SITE. -->\n      </div> <!-- End interactiveElement. -->\n    </div> <!-- End layer3 -->\n\n  </div>\n</div>\n`,\n  styles: [`.horizontal-container{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row}.center-perp-axis{-webkit-box-align:center;-ms-flex-align:center;align-items:center}.dot{border-radius:50%;border:0;background-color:#00bcd4;margin:2px;padding:0;width:13px;height:13px;vertical-align:top}#circleSquareDiamondLoadingIconContainer{padding-top:2px}.emojiWidget{background-color:#ffcc4d;width:16px;height:16px}.iconEmoji{width:16px;height:16px;opacity:0}.hiddenEmoji{display:none}#animationContainer{z-index:5;width:20px;height:22px;margin-right:10px}#scoreInfoContainer{padding-top:2px}.widgetText{color:#6e7378;font-size:12px;line-height:16px;letter-spacing:.05em;width:100%}#feedbackText,#percentage{margin-right:4px}.widgetText a{color:#6e7378!important}.link{text-decoration:underline;cursor:pointer}.layerText{padding-right:10px;padding-top:2px}#detailedScoreInfo a{width:40%;color:#6e7378!important}.feedbackQuestion{margin-right:4px}.seemWrongButton{font-size:12px;font-family:Roboto,sans-serif;line-height:16px;letter-spacing:.05em;-ms-flex-item-align:start;align-self:flex-start}.detailsContainer{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;width:100%;margin-top:1px}.layersContainer{width:100%;position:relative}.layer{position:absolute}.hiddenLayer{display:none!important}.interactiveElement{vertical-align:top;text-align:end;margin-left:auto;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end;min-width:-webkit-fit-content;min-width:-moz-fit-content;min-width:fit-content;padding-top:1px}.interactiveElement .feedbackContainer{padding-top:2px}#layer3 .interactiveElement{-webkit-box-flex:0;-ms-flex:0 1 auto;flex:0 1 auto;margin-left:0;padding-top:2px}.noBorderButton{background-color:#fff;border:0;cursor:pointer;padding-top:0;font-family:Roboto,sans-serif}.feedbackResponseButton{padding-left:0}.purpleButton{color:#6200ea;text-transform:uppercase}.greyButton{color:#6e7378}.underlineButton{text-decoration:underline}.yesNoButton{font-size:12px;font-family:Roboto,sans-serif;line-height:16px;letter-spacing:.05em}.yesNoButton.purpleButton{margin-left:8px;margin-right:8px}.yesNoButtonContainer{-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end}#widgetContainer{height:50px}.error{font-size:12px;letter-spacing:.05em;line-height:16px;color:#f44336}.infoButtonContainer{margin-left:10px;width:26px;height:26px}.infoButton{background-color:transparent;border:none;cursor:pointer}.material-icons.md-18{font-size:18px}.material-icons.md-dark{color:#78909c}.material-icons.md-dark.md-inactive{color:rgba(0,0,0,.26)}`],\n})\n@Injectable()\nexport class PerspectiveStatus implements OnChanges, AfterViewInit, AfterViewChecked {\n  // TODO(rachelrosen): Instead of all these inputs, we should merge the\n  // convai-checker component with this one.\n  @Input() indicatorWidth: number = 13;\n  @Input() indicatorHeight: number = 13;\n  @Input() configurationInput: string = ConfigurationInput.DEMO_SITE;\n  // Since score is zero for both no score and legitimate scores of zero, keep\n  // a flag to indicate whether we should show UI for showing score info.\n  @Input() hasScore: boolean = false;\n  @Input() fontSize: number = 12;\n  @Input() gradientColors: string[] = [\"#ffffff\", \"#000000\"];\n  @Input() canAcceptFeedback: boolean = false;\n  @Input() feedbackRequestInProgress: boolean = false;\n  @Input() feedbackRequestSubmitted: boolean = false;\n  @Input() feedbackRequestError: boolean = false;\n  @Input() initializeErrorMessage: string;\n  @Input() feedbackText: [string, string, string] = [\n     DEFAULT_FEEDBACK_TEXT,\n     DEFAULT_FEEDBACK_TEXT,\n     DEFAULT_FEEDBACK_TEXT\n  ];\n  @Input() scoreThresholds: [number, number, number] = [\n    ScoreThreshold.OKAY,\n    ScoreThreshold.BORDERLINE,\n    ScoreThreshold.UNCIVIL\n  ];\n  @Input() showPercentage: boolean = true;\n  @Input() showMoreInfoLink: boolean = true;\n  @Input() analyzeErrorMessage: string|null = null;\n  @Input() userFeedbackPromptText: string;\n  @Input() hideLoadingIconAfterLoad: boolean;\n  @Input() hideLoadingIconForScoresBelowMinThreshold: boolean;\n  @Input() alwaysHideLoadingIcon: boolean;\n  @Input() loadingIconStyle: string;\n  @Output() scoreChangeAnimationCompleted: EventEmitter<void> = new EventEmitter<void>();\n  @Output() modelInfoLinkClicked: EventEmitter<void> = new EventEmitter<void>();\n  @Output() commentFeedbackSubmitted: EventEmitter<CommentFeedback> =\n    new EventEmitter<CommentFeedback>();\n\n  public configurationEnum = Configuration;\n  public configuration = this.configurationEnum.DEMO_SITE;\n  public loadingIconStyleConst = LoadingIconStyle;\n  public score: number = 0;\n  public currentLayerIndex: number = 0;\n  private layerAnimationHandles: HTMLElement[] = [];\n  private layerAnimationSelectors: string[] = [\n    \"#layer1\", \"#layer2\", \"#layer3\"\n  ];\n\n  private showFeedbackQuestion: boolean = false;\n  isLoading: boolean = false;\n  public isPlayingLoadingAnimation: boolean = false;\n  public isPlayingFadeDetailsAnimation: boolean = false;\n  public isPlayingShowOrHideLoadingWidgetAnimation: boolean = false;\n  public shouldHideStatusWidget: boolean = false;\n  public showScore: boolean = true;\n  public currentShape: Shape = Shape.CIRCLE;\n  public currentEmoji: Emoji = Emoji.SMILE;\n  private showingMoreInfo: boolean = false;\n  @ViewChild('circleSquareDiamondWidget') private circleSquareDiamondWidget: ElementRef;\n  @ViewChild('emojiStatusWidget') private emojiWidget: ElementRef;\n  @ViewChild('widgetContainer') private container: ElementRef;\n  @ViewChild('smileEmoji') private smileEmoji: ElementRef;\n  @ViewChild('neutralEmoji') private neutralEmoji: ElementRef;\n  @ViewChild('sadEmoji') private sadEmoji: ElementRef;\n  private widgetElement: HTMLElement|null = null;\n  private layerTextContainer: HTMLElement;\n  private interactiveLayerControlsContainer: HTMLElement;\n  public layersAnimating: boolean = false;\n  private layerHeightPixels: number;\n  // Animation being used to update the display settings of the demo. This\n  // should not be used for a loading animation.\n  private updateDemoSettingsAnimation: any;\n  private isPlayingUpdateShapeAnimation: boolean;\n  private updateStatusWidgetVisibilityAnimation: TimelineMax;\n  private hideEmojiIconsForLoadingAnimation = false;\n  // Promise that should resolve once this.widget has been initialized.\n  private widgetReady: Promise<void>;\n\n  /** Variables to store state change flags to use in ngAfterViewChecked. */\n  private loadingIconStyleChanged = false;\n  private scoreThresholdsChanged = false;\n\n  private hideLoadingIconAfterLoadChanged = false;\n  private alwaysHideLoadingIconChanged = false;\n\n  private stateChangeAnimations: TimelineMax|null = null;\n  private isPlayingStateChangeAnimations = false;\n  private pendingPostLoadingStateChangeAnimations: TimelineMax|null = null;\n  private isPlayingPostLoadingStateChangeAnimations = false;\n  private currentStateChangeAnimationId: number = 0;\n  private gradientColorScale: string[];\n\n  // Inject ngZone so that we can call ngZone.run() to re-enter the angular\n  // zone inside gsap animation callbacks.\n  constructor(private ngZone: NgZone, private elementRef: ElementRef) {\n  }\n\n  ngOnInit() {\n    this.configuration = this.getConfigurationFromInputString(this.configurationInput);\n\n    // TODO(rachelrosen): Investigate changing these to ViewChildren/replacing\n    // calls to querySelector, if possible.\n    for (let layerAnimationSelector of this.layerAnimationSelectors) {\n      this.layerAnimationHandles.push(\n        this.elementRef.nativeElement.querySelector(layerAnimationSelector));\n    }\n    this.updateLayerElementContainers();\n\n    this.updateGradient();\n  }\n\n  ngAfterViewInit() {\n    this.widgetReady = Promise.resolve().then(() => {\n      this.updateWidgetElement();\n      this.getUpdateWidgetStateAnimation().play();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) : void {\n    // Return if ngOnInit has not been called yet, since the animation code\n    // cannot run.\n    if (this.widgetElement === null\n      || this.container === undefined\n      || this.layerTextContainer === undefined\n      || this.interactiveLayerControlsContainer === undefined) {\n      return;\n    }\n\n    if (changes['loadingIconStyle'] !== undefined) {\n      console.debug('Loading icon style change:', changes['loadingIconStyle']);\n      this.loadingIconStyleChanged = true;\n    }\n\n    if (changes['gradientColors'] !== undefined) {\n      console.debug('Change in gradientColors');\n      this.updateGradient();\n      if (this.loadingIconStyle === LoadingIconStyle.CIRCLE_SQUARE_DIAMOND) {\n        this.getUpdateGradientColorAnimation(0.1).play();\n      }\n    }\n\n    if (changes['configurationInput'] !== undefined) {\n      this.configuration = this.getConfigurationFromInputString(this.configurationInput);\n      this.resetLayers();\n    }\n\n    if (changes['scoreThresholds'] !== undefined) {\n      console.debug('Change in scoreThresholds');\n      // ngOnChanges will be called for a change in the array reference, not the\n      // array values, so check to make sure they're really different.\n      let valuesChanged = false;\n      let scoreThresholdChanges = changes['scoreThresholds'];\n      for (let i = 0; i < scoreThresholdChanges.previousValue.length; i++) {\n        if (scoreThresholdChanges.currentValue[i]\n            !== scoreThresholdChanges.previousValue[i]) {\n          valuesChanged = true;\n          break;\n        }\n      }\n\n      if (valuesChanged) {\n        this.updateGradient();\n\n        // Kill any prior animations so that the resetting any animation state\n        // will not get overridden by the old animation before the new one can\n        // begin; this can lead to bugs.\n        if (this.updateDemoSettingsAnimation) {\n          this.updateDemoSettingsAnimation.kill();\n        }\n        this.scoreThresholdsChanged = true;\n      }\n    }\n\n    if (changes['hideLoadingIconAfterLoad']) {\n      this.hideLoadingIconAfterLoadChanged = true;\n    }\n\n    if (changes['alwaysHideLoadingIcon']) {\n      this.alwaysHideLoadingIconChanged = true;\n    }\n  }\n\n  /**\n   * Make any animation changes that require ViewChild updates in this lifecycle\n   * callback, to ensure that the ViewChild has been updated.\n   */\n  ngAfterViewChecked() {\n    if (this.scoreThresholdsChanged\n        || this.loadingIconStyleChanged\n        || this.hideLoadingIconAfterLoadChanged\n        || this.alwaysHideLoadingIconChanged) {\n\n      // Kill any pending state change animations, since those are for an\n      // out-of-date state.\n      if (this.isPlayingStateChangeAnimations) {\n        this.stateChangeAnimations.kill();\n        console.debug('Killing pending state change animation.');\n      } else if (this.isPlayingPostLoadingStateChangeAnimations) {\n        this.pendingPostLoadingStateChangeAnimations.kill();\n        this.isPlayingPostLoadingStateChangeAnimations = false;\n        console.debug('Killing pending post-loading state change animation');\n      }\n\n      // Animations to run immediately.\n      let afterChangesTimeline = new TimelineMax({\n        onStart: () => {\n          this.ngZone.run(() => {\n            this.isPlayingStateChangeAnimations = true;\n            console.debug('Starting state change animation');\n          });\n        },\n        onComplete: () => {\n          this.ngZone.run(() => {\n            this.isPlayingStateChangeAnimations = false;\n            console.debug('Completing state change animation');\n          });\n        }\n      });\n\n      if (this.isLoading) {\n        // Animations to run after any pending loading finishes.\n        this.pendingPostLoadingStateChangeAnimations = new TimelineMax({\n          onStart: () => {\n            this.ngZone.run(() => {\n              this.isPlayingPostLoadingStateChangeAnimations = true;\n              console.debug('Started postLoadingStateChangeAnimations');\n            });\n          },\n          onComplete: () => {\n            this.ngZone.run(() => {\n              this.isPlayingPostLoadingStateChangeAnimations = false;\n              console.debug('Completing postLoadingStateChangeAnimations');\n            });\n          }\n        });\n      } else {\n        this.pendingPostLoadingStateChangeAnimations = null;\n      }\n\n      // Run in a Promise resolve statement so we don't get an\n      // ExpressionChangedAfterItHasBeenCheckedError.\n      Promise.resolve().then(() => {\n        if (this.hideLoadingIconAfterLoadChanged\n            || this.alwaysHideLoadingIconChanged) {\n          if (this.hideLoadingIconAfterLoadChanged) {\n            console.debug('Setting hideLoadingIconAfterLoadChanged to false');\n            this.hideLoadingIconAfterLoadChanged = false;\n          }\n          if (this.alwaysHideLoadingIconChanged) {\n            console.debug('Setting alwaysHideLoadingIconChanged to false');\n            this.alwaysHideLoadingIconChanged = false;\n          }\n\n          // Don't do anything if the loadingIconStyle has also changed, since\n          // that animation will override animations to do here.\n          if (!this.loadingIconStyleChanged) {\n            // Call getUpdateWidgetStateAnimation to update the visibility and x\n            // position of all elements.\n            if (this.isLoading) {\n              this.pendingPostLoadingStateChangeAnimations.add(\n                this.getUpdateWidgetStateAnimation());\n            } else {\n              afterChangesTimeline.add(\n                this.getUpdateWidgetStateAnimation());\n            }\n          }\n        }\n\n        if (this.loadingIconStyleChanged) {\n          this.updateWidgetElement();\n          // If the previous loading icon was already hidden, we should update\n          // the position of the new one to match, so transition animations\n          // work correctly.\n          if (this.shouldHideStatusWidget) {\n            this.widgetElement.style.transform =\n              'matrix(1,0,0,1,' + (-1 * (this.indicatorWidth + WIDGET_PADDING_PX + WIDGET_RIGHT_MARGIN_PX)) + ',0)';\n          }\n          console.debug('Setting loadingIconStyleChanged to false');\n          this.loadingIconStyleChanged = false;\n          let loadingIconStyleChangedTimeline = new TimelineMax({});\n          // TODO(rachelrosen): Determine whether this covers all cases\n          // regarding the correct x position of elements, or if more animations\n          // are needed here.\n          loadingIconStyleChangedTimeline.add(this.getUpdateWidgetStateAnimation());\n          if (this.isLoading) {\n            this.pendingPostLoadingStateChangeAnimations.add(\n              loadingIconStyleChangedTimeline);\n          } else {\n            afterChangesTimeline.add(loadingIconStyleChangedTimeline);\n          }\n        } else if (this.scoreThresholdsChanged) {\n          console.debug('Setting scoreThresholdsChanged to false');\n          this.scoreThresholdsChanged = false;\n          this.updateDemoSettingsAnimation = this.getUpdateWidgetStateAnimation();\n          if (this.isLoading) {\n            this.pendingPostLoadingStateChangeAnimations.add(\n              this.updateDemoSettingsAnimation);\n          } else {\n            afterChangesTimeline.add(this.updateDemoSettingsAnimation);\n          }\n        }\n\n        this.stateChangeAnimations = afterChangesTimeline;\n        this.stateChangeAnimations.play();\n      });\n    }\n  }\n\n  getFirstGradientRatio(): number {\n    return FIRST_GRADIENT_RATIO;\n  }\n\n  getAdjustedGradientControlPoints(gradientPointCount: number): number[] {\n    // Points along a gradient of size |gradientPointCount| at which to add\n    // colors. The first part of the gradient is not linear, and instead moves\n    // from color 1 to color 2 with the ratio FIRST_GRADIENT_RATIO.\n    // Use Math.floor because control points have to be integers.\n    let gradientPoints = [\n      Math.floor(\n        gradientPointCount * (\n          this.scoreThresholds[0] + FIRST_GRADIENT_RATIO * (\n            this.scoreThresholds[1] - this.scoreThresholds[0]))),\n      Math.floor(gradientPointCount * this.scoreThresholds[1]),\n      Math.floor(gradientPointCount * this.scoreThresholds[2])\n    ];\n\n    // If two gradient colors are added at the same point (which happens when\n    // scoreThresholds[i] === scoreThresholds[i + 1]), the toxiclibsjs library\n    // does not automatically favor the correct color. Add deltas to the\n    // gradient points that favor the color for the higher threshold at that\n    // point.\n    //\n    // Examples:\n    //   [50, 90, 90] => [50, 89, 90]\n    //   [50, 50, 99] => [49, 50, 99]\n    //   [50, 50, 50] => [48, 49, 50]\n    let gradientPointDeltas: number[] = [];\n    for (let i = gradientPoints.length - 1; i >= 0; i--) {\n      if (gradientPoints[i] >= gradientPoints[i + 1]) {\n        gradientPoints[i] -= (gradientPoints[i] - gradientPoints[i + 1] + 1);\n      }\n    }\n    return gradientPoints;\n  }\n\n  /**\n   * Updates the gradient color scale for the shape based on the\n   * scoreThresholds.\n   */\n  updateGradient() {\n    // The number of points to use to calculate the gradient.\n    let gradientPointCount = 100;\n\n    let gradientPoints = this.getAdjustedGradientControlPoints(gradientPointCount);\n    const sliderGradient = new toxicLibsJS.color.ColorGradient();\n\n    for (let i = 0; i < gradientPoints.length; i++) {\n      // If the gradient point is less than 0, it measn scoresThresholds[i] ===\n      // scoreThresholds[i + 1] === 0, in which case we start at the second\n      // higher indexed gradient color.\n      if (gradientPoints[i] >= 0) {\n        sliderGradient.addColorAt(\n          gradientPoints[i],\n          toxicLibsJS.color.TColor.newHex(this.gradientColors[i]));\n      }\n    }\n\n    this.gradientColorScale =\n      sliderGradient.calcGradient(0, gradientPointCount).colors\n        .map((tColor) => tColor.toRGBCSS());\n  }\n\n  interpolateColors(score: number): string {\n    // Find the two color indices to interpolate between, and prevent overflow\n    // if the score >= 1 by just using the color at the last index.\n    let scoreLowerIndex = Math.min(\n      Math.floor(score * 100), this.gradientColorScale.length - 1);\n    let scoreUpperIndex = Math.min(\n      Math.ceil(score * 100), this.gradientColorScale.length - 1);\n\n    let interpolatorFn = d3.interpolateRgb(\n      this.gradientColorScale[scoreLowerIndex],\n      this.gradientColorScale[scoreUpperIndex]);\n    return interpolatorFn((score * 100) - scoreLowerIndex);\n  }\n\n  private updateWidgetElement(): void {\n    if (this.circleSquareDiamondWidget != null) {\n      this.widgetElement = this.circleSquareDiamondWidget.nativeElement;\n    } else if (this.emojiWidget != null) {\n      this.widgetElement = this.emojiWidget.nativeElement;\n    } else {\n      console.error('Widget element is null.');\n      this.widgetElement = null;\n    }\n  }\n\n  private getShouldHideStatusWidget(loadStart: boolean): boolean {\n    let shouldHide = false;\n\n    if (this.hideLoadingIconAfterLoad) {\n      shouldHide = shouldHide || !loadStart;\n    }\n    if (this.hideLoadingIconForScoresBelowMinThreshold) {\n      shouldHide = shouldHide || loadStart || (this.score < this.scoreThresholds[0]);\n    }\n    if (this.alwaysHideLoadingIcon) {\n      shouldHide = true;\n    }\n\n    return shouldHide;\n  }\n\n  private getUpdateStatusWidgetVisibilityAnimation(loadStart: boolean): TimelineMax {\n    let hide = this.getShouldHideStatusWidget(loadStart);\n\n    let forceAnimation = false;\n    if (this.isPlayingShowOrHideLoadingWidgetAnimation) {\n      // Note: This happens when more than one of these animations are\n      // constructed back to back, before the first has started, or if an\n      // animation is killed before it can complete. In these cases we always\n      // want to return the full desired animation, not the empty one.\n      console.debug('Calling getUpdateStatusWidgetVisibility while '\n                    + 'isPlayingShowOrHideLoadingWidgetAnimation = true. ');\n      forceAnimation = true;\n    }\n\n    // If nothing has changed, return an empty animation.\n    if (hide === this.shouldHideStatusWidget && !forceAnimation) {\n      console.debug('Returning without update status widget visibility animation.');\n      return new TimelineMax({});\n    } else {\n      console.debug('Getting update status widget visibility animation.');\n    }\n\n    this.isPlayingShowOrHideLoadingWidgetAnimation = true;\n    let updateStatusWidgetVisibilityAnimation = new TimelineMax({\n      onStart: () => {\n        this.ngZone.run(() => {\n          console.debug('Updating status widget visibility to '\n                        + (hide ? 'hidden' : 'visible') + ' from '\n                        + (this.shouldHideStatusWidget ? 'hidden' : 'visible'));\n          // Disable hiding so animations will show up.\n          this.shouldHideStatusWidget = false;\n        });\n      },\n      onComplete: () => {\n        this.ngZone.run(() => {\n          console.debug('Changing status widget visibility complete, hide=', hide);\n          this.isPlayingShowOrHideLoadingWidgetAnimation = false;\n          this.shouldHideStatusWidget = hide;\n        });\n      },\n    });\n    updateStatusWidgetVisibilityAnimation.add([\n      this.getChangeLoadingIconVisibilityAnimation(hide),\n      this.getChangeLoadingIconXValueAnimation(hide)]);\n    return updateStatusWidgetVisibilityAnimation;\n  }\n\n  private getChangeLoadingIconVisibilityAnimation(hide: boolean): TweenMax {\n    return TweenMax.to(\n      this.widgetElement, FADE_WIDGET_TIME_SECONDS, { opacity: hide ? 0 : 1})\n  }\n\n  private getSetIconToNeutralStateAnimation(): TimelineMax {\n    let timeline = new TimelineMax({});\n\n    if (this.loadingIconStyle === LoadingIconStyle.CIRCLE_SQUARE_DIAMOND) {\n      timeline.add(this.getFadeAndShrinkAnimation(FADE_ANIMATION_TIME_SECONDS, false));\n      timeline.add(this.getTransitionToCircleAnimation(\n        SHAPE_MORPH_TIME_SECONDS, NEUTRAL_GRAY_COLOR));\n    } else if (this.loadingIconStyle === LoadingIconStyle.EMOJI) {\n      timeline.add(this.getHideEmojisAnimation());\n      timeline.add(this.getChangeColorAnimation(\n        QUICK_COLOR_CHANGE_LOADING_ANIMATION_TIME_SECONDS, NEUTRAL_GRAY_COLOR));\n    }\n\n    return timeline;\n  }\n\n\n  private getChangeLoadingIconXValueAnimation(hide: boolean): TimelineMax {\n    let timeline = new TimelineMax({});\n    let translateXAnimations: Animation[] = [];\n    translateXAnimations.push(\n      TweenMax.to(this.widgetElement, FADE_WIDGET_TIME_SECONDS,\n                  { x: hide ? -1 * (this.indicatorWidth\n                                    + WIDGET_PADDING_PX\n                                    + WIDGET_RIGHT_MARGIN_PX)\n                            : 0}));\n    if (this.configuration === Configuration.DEMO_SITE) {\n      // Also shift the text for the leftmost element in each layer left/right\n      // as needed. Even though only layer 0 is visible when the score changes,\n      // the elements in the rest of the layers need to be adjusted to match\n      // for when we transition to other layers.\n      let layer0TextContainer = this.elementRef.nativeElement.querySelector(\n          this.layerAnimationSelectors[0] + ' .layerText');\n      let layer1TextContainer = this.elementRef.nativeElement.querySelector(\n          this.layerAnimationSelectors[1] + ' .layerText');\n      let layer2InteractiveContainer =\n        this.elementRef.nativeElement.querySelector(\n          this.layerAnimationSelectors[2] + ' .interactiveElement');\n      const translateXSettings = {\n        x: hide ? -1 * (this.indicatorWidth\n                        + WIDGET_PADDING_PX\n                        + WIDGET_RIGHT_MARGIN_PX)\n                : 0\n      };\n      translateXAnimations.push(\n        TweenMax.to(layer0TextContainer,\n                    FADE_WIDGET_TIME_SECONDS,\n                    translateXSettings));\n      translateXAnimations.push(\n        TweenMax.to(layer1TextContainer,\n                    FADE_WIDGET_TIME_SECONDS,\n                    translateXSettings));\n      translateXAnimations.push(\n        TweenMax.to(layer2InteractiveContainer,\n                    FADE_WIDGET_TIME_SECONDS,\n                    translateXSettings));\n    }\n    timeline.add(translateXAnimations);\n    return timeline;\n  }\n\n  private getConfigurationFromInputString(inputString: string): Configuration {\n    if (inputString === ConfigurationInput.EXTERNAL) {\n      return Configuration.EXTERNAL;\n    } else {\n      // Demo site is the default.\n      return Configuration.DEMO_SITE;\n    }\n  }\n\n  private updateLayerElementContainers(): void {\n    this.layerTextContainer = this.elementRef.nativeElement.querySelector(\n          this.layerAnimationSelectors[this.currentLayerIndex] + ' .layerText');\n    this.interactiveLayerControlsContainer =\n      this.elementRef.nativeElement.querySelector(\n        this.layerAnimationSelectors[this.currentLayerIndex]\n        + ' .interactiveElement');\n  }\n\n  shouldShowFeedback(score: number) {\n    return score >= this.scoreThresholds[0];\n  }\n\n  // Wrapper for twemoji.parse() to use in data binding. Parses text, replacing\n  // any emojis with <img> tags. All other text remains the same.\n  parseEmojis(text: string) {\n    return twemoji.parse(text);\n  }\n\n  getFeedbackTextForScore(score: number): string {\n    if (score >= this.scoreThresholds[2]) {\n      return this.feedbackText[2];\n    } else if (score >= this.scoreThresholds[1]) {\n      return this.feedbackText[1];\n    } else if (score >= this.scoreThresholds[0]) {\n      return this.feedbackText[0];\n    } else {\n      return '';\n    }\n  }\n\n  feedbackContainerClicked() {\n    if (this.configuration === Configuration.DEMO_SITE) {\n      this.getTransitionToLayerAnimation(1, LAYER_TRANSITION_TIME_SECONDS).play();\n    } else if (this.configuration === Configuration.EXTERNAL) {\n      this.showFeedbackQuestion = true;\n    }\n  }\n\n  feedbackCompleted(success: boolean) {\n    if (success) {\n      this.feedbackRequestSubmitted = true;\n    } else {\n      this.feedbackRequestError = true;\n    }\n    if (this.configuration === Configuration.DEMO_SITE) {\n      let feedbackCompletedTimeline = new TimelineMax({});\n\n      feedbackCompletedTimeline.add([\n        this.getTransitionToLayerAnimation(2, LAYER_TRANSITION_TIME_SECONDS),\n        this.getSetIconToNeutralStateAnimation()\n      ]);\n\n      feedbackCompletedTimeline.play();\n    }\n  }\n\n  hideFeedbackQuestion() {\n    this.showFeedbackQuestion = false;\n  }\n\n  resetFeedback() {\n    this.showFeedbackQuestion = false;\n    this.feedbackRequestInProgress = false;\n    this.feedbackRequestSubmitted = false;\n    this.feedbackRequestError = false;\n  }\n\n  resetLayers() {\n    this.resetFeedback();\n    let resetAnimationTimeline = new TimelineMax({});\n    resetAnimationTimeline.add(this.getTransitionToLayerAnimation(0, LAYER_TRANSITION_TIME_SECONDS));\n    resetAnimationTimeline.add(this.getUpdateWidgetStateAnimation());\n    resetAnimationTimeline.play();\n  }\n\n  submitFeedback(commentIsToxic: boolean) {\n    this.feedbackRequestError = false;\n    this.commentFeedbackSubmitted.emit({commentMarkedAsToxic: commentIsToxic});\n  }\n\n  getResetRotationAnimation(): TweenMax {\n    return TweenMax.to(this.widgetElement, 0.1, {\n      rotation: this.currentShape === Shape.DIAMOND ? 45 : 0,\n    });\n\n  }\n\n  // Gets the shape corresponding to the specified score.\n  getShapeForScore(score: number): Shape {\n    if (score > this.scoreThresholds[2]) {\n      return Shape.DIAMOND;\n    } else if (score > this.scoreThresholds[1]) {\n      return Shape.SQUARE;\n    } else {\n      return Shape.CIRCLE;\n    }\n  }\n\n  // Gets the emoji corresponding to the specified score.\n  getEmojiForScore(score: number): Emoji {\n    if (score > this.scoreThresholds[2]) {\n      return Emoji.SAD;\n    } else if (score > this.scoreThresholds[1]) {\n      return Emoji.NEUTRAL;\n    } else {\n      return Emoji.SMILE;\n    }\n  }\n\n  getUpdateShapeAnimation(score: number): TimelineMax {\n    if (this.loadingIconStyle !== LoadingIconStyle.CIRCLE_SQUARE_DIAMOND) {\n      console.debug('Calling getUpdateShapeAnimation(), but the loading icon'\n                    + 'style is not set to circle/square/diamond. Returning an'\n                    + 'empty timeline.');\n      // The loading icon state has been changed; return an empty timeline.\n      // This is not an error and can happen when the loading icon state is\n      // changed via data binding while the loading animation is active.\n      return new TimelineMax({});\n    }\n    let updateShapeAnimationTimeline = new TimelineMax({\n      onStart: () => {\n        this.isPlayingUpdateShapeAnimation = true;\n      },\n      onComplete: () => {\n        this.isPlayingUpdateShapeAnimation = false;\n      },\n    });\n\n    // Shrink before updating to a new shape.\n    updateShapeAnimationTimeline.add(\n      this.getFadeAndShrinkAnimation(FADE_ANIMATION_TIME_SECONDS, false));\n\n    if (score > this.scoreThresholds[2]) {\n      updateShapeAnimationTimeline.add(\n        this.getTransitionToDiamondAnimation(.8 * SHAPE_MORPH_TIME_SECONDS));\n    } else if (score > this.scoreThresholds[1]) {\n      // Square is a special case, since we rotate based on the current degrees\n      // and not to a specific rotation. As a result this can get messed up if\n      // we're in the middle of an existing rotation, so reset the rotation\n      // accordingly before animating to prevent this bug.\n      // Note that this only works if the previous animation gets killed first.\n      // TODO(rachelrosen): Figure out a more general way to prevent this bug\n      // for all cases, not just when customizing the demo. It seems to happen\n      // occasionally in the wild as well.\n      if (this.isPlayingUpdateShapeAnimation) {\n        console.debug('Starting updateShapeAnimation to square while in the'\n                      + ' middle of an existing updateShapeAnimation or before'\n                      + ' the previous animation was able to finish; resetting'\n                      + ' rotation state');\n        updateShapeAnimationTimeline.add(this.getResetRotationAnimation());\n      }\n      updateShapeAnimationTimeline.add(\n        this.getTransitionToSquareAnimation(SHAPE_MORPH_TIME_SECONDS));\n    } else {\n      updateShapeAnimationTimeline.add(\n        this.getTransitionToCircleAnimation(SHAPE_MORPH_TIME_SECONDS));\n    }\n\n    return updateShapeAnimationTimeline;\n  }\n\n  setShowMoreInfo(showMoreInfo: boolean): void {\n    this.getTransitionToLayerAnimation(\n      showMoreInfo ? 1 : 0, LAYER_TRANSITION_TIME_SECONDS).play();\n  }\n\n  getAccessibilityDescriptionForEmoji(emoji: Emoji): string {\n    if (emoji === Emoji.SMILE) {\n      return \"Smile emoji\";\n    } else if (emoji === Emoji.NEUTRAL) {\n      return \"Neutral emoji\";\n    } else {\n      return \"Sad emoji\";\n    }\n  }\n\n  getEmojiElementFromEmojiType(emojiType: Emoji): HTMLElement {\n    if (emojiType === Emoji.SMILE) {\n      return this.smileEmoji.nativeElement;\n    } else if (emojiType === Emoji.NEUTRAL) {\n      return this.neutralEmoji.nativeElement;\n    } else {\n      return this.sadEmoji.nativeElement;\n    }\n  };\n\n  getAnimationA11yLabel(loadingIconStyle: string,\n                        isPlayingLoadingAnimation: boolean): string {\n    if (isPlayingLoadingAnimation) {\n      return \"Computing score animation\";\n    } else if (loadingIconStyle === LoadingIconStyle.EMOJI) {\n      return this.getAccessibilityDescriptionForEmoji(this.currentEmoji);\n    } else {\n      return this.getAccessibilityDescriptionForShape(this.currentShape);\n    }\n  }\n\n  notifyModelInfoLinkClicked(): void {\n    this.modelInfoLinkClicked.emit();\n  }\n\n  getUpdateWidgetStateAnimation(): TimelineMax {\n    let updateScoreCompletedTimeline = new TimelineMax({\n      onStart: () => {\n        this.ngZone.run(() => {\n          console.debug('Starting animation for getUpdateWidgetStateAnimation');\n        });\n      },\n      onComplete: () => {\n        this.ngZone.run(() => {\n          console.debug('Completing animation for getUpdateWidgetStateAnimation');\n          this.scoreChangeAnimationCompleted.emit();\n        });\n      }\n    });\n    if (this.loadingIconStyle === LoadingIconStyle.CIRCLE_SQUARE_DIAMOND) {\n      console.debug('Update widget state for default style');\n      let updateScoreCompletedTimeline = new TimelineMax({\n        onComplete: () => {\n          this.ngZone.run(() => {\n            console.debug(this.scoreChangeAnimationCompleted);\n            // TODO(rachelrosen): Debug ObjectUnsubscribedError that occurs here.\n            // Seems to happen when animation finishes after changing from emoji\n            // to shape. This only happens when this component is a child of the\n            // conversationai-website. This error does not reproduce reliably\n            // (it was there one day and gone a few days later with no code\n            // changes) and therefore requires more investigation.\n            this.scoreChangeAnimationCompleted.emit();\n          });\n        }\n      });\n      updateScoreCompletedTimeline.add(\n        this.getUpdateStatusWidgetVisibilityAnimation(false));\n      updateScoreCompletedTimeline.add(this.getUpdateShapeAnimation(this.score));\n      return updateScoreCompletedTimeline;\n    } else if (this.loadingIconStyle === LoadingIconStyle.EMOJI) {\n      console.debug('Update widget state for emoji style');\n      updateScoreCompletedTimeline.add(\n        this.getUpdateStatusWidgetVisibilityAnimation(false));\n      updateScoreCompletedTimeline.add(this.getShowEmojiAnimation());\n      return updateScoreCompletedTimeline;\n    } else {\n      console.error('Calling updateWidgetState for unknown loadingIconStyle: '\n                    + this.loadingIconStyle);\n      return new TimelineMax({});\n    }\n  }\n\n  notifyScoreChange(score: number): void {\n    console.debug('Setting this.score =', score);\n    this.score = score;\n    if (this.isPlayingLoadingAnimation) {\n      // Loading just ended.\n      this.setLoading(false);\n    } else {\n      // This indicates that the score was reset without being the result of a\n      // load completing, such as the text being cleared.\n      console.debug('Updating shape from notifyScoreChange');\n      this.getUpdateWidgetStateAnimation().play();\n    }\n  }\n\n  setLoading(loading: boolean): void {\n    this.widgetReady.then(() => {\n      console.debug('Calling setLoading(' + loading + ')');\n      if (this.widgetElement === null) {\n        console.error('this.widgetElement = null in call to setLoading');\n        return;\n      }\n      this.isLoading = loading;\n      if (this.loadingIconStyle === LoadingIconStyle.CIRCLE_SQUARE_DIAMOND) {\n        this.setLoadingForDefaultWidget(loading);\n      } else if (this.loadingIconStyle === LoadingIconStyle.EMOJI) {\n        this.setLoadingForEmojiWidget(loading);\n      } else {\n        console.error(\n          'Calling setLoading for unknown loadingIconStyle: ' + this.loadingIconStyle);\n      }\n    });\n  }\n\n  getChangeOpacityAnimation(element: HTMLElement, timeSeconds: number,\n                            opacity: number): TweenMax {\n    return TweenMax.to(element, timeSeconds, { opacity: opacity});\n  }\n\n  getShowEmojiAnimation(): TimelineMax {\n    if (this.loadingIconStyle !== LoadingIconStyle.EMOJI) {\n      console.debug('Calling getShowEmojiAnimation() but loading icon style is'\n                  + 'not emoji style, returning an empty timeline');\n      // The loading icon state has been changed; return an empty timeline.\n      // This is not an error and can happen when the loading icon state is\n      // changed via data binding while the loading animation is active.\n      return new TimelineMax({});\n    }\n    let emojiType: Emoji|null = null;\n    if (this.score > this.scoreThresholds[2]) {\n      emojiType = Emoji.SAD;\n    } else if (this.score > this.scoreThresholds[1]) {\n      emojiType = Emoji.NEUTRAL;\n    } else {\n      emojiType = Emoji.SMILE;\n    }\n    let emojiElementToShow = this.getEmojiElementFromEmojiType(emojiType);\n    let showEmojiTimeline = new TimelineMax({\n      onStart:() => {\n        this.ngZone.run(() => {\n          this.hideEmojiIconsForLoadingAnimation = false;\n        });\n      },\n      onComplete:() => {\n        this.ngZone.run(() => {\n          this.currentEmoji = emojiType;\n        });\n      }\n    });\n\n    // Updates the background color to yellow (it could be gray from being in a\n    // neutral state).\n    const resetBackgroundColorAnimation = this.getChangeColorAnimation(\n      QUICK_COLOR_CHANGE_LOADING_ANIMATION_TIME_SECONDS, EMOJI_COLOR);\n\n    showEmojiTimeline.add(this.getFadeAndShrinkAnimation(FADE_ANIMATION_TIME_SECONDS, false));\n    showEmojiTimeline.add([\n      resetBackgroundColorAnimation,\n      this.getToFullScaleBounceAnimation(EMOJI_BOUNCE_IN_TIME_SECONDS),\n      this.getChangeOpacityAnimation(emojiElementToShow, FADE_EMOJI_TIME_SECONDS, 1)]);\n    return showEmojiTimeline;\n  }\n\n  getHideEmojisAnimation(): TimelineMax {\n    let hideEmojiTimeline = new TimelineMax({\n      onComplete: () => {\n        this.ngZone.run(()=> {\n          this.hideEmojiIconsForLoadingAnimation = true;\n        });\n      }\n    });\n    hideEmojiTimeline.add([\n      this.getChangeOpacityAnimation(\n        this.smileEmoji.nativeElement, FADE_EMOJI_TIME_SECONDS, 0),\n      this.getChangeOpacityAnimation(\n        this.neutralEmoji.nativeElement, FADE_EMOJI_TIME_SECONDS, 0),\n      this.getChangeOpacityAnimation(\n        this.sadEmoji.nativeElement, FADE_EMOJI_TIME_SECONDS, 0)\n    ]);\n    return hideEmojiTimeline;\n  }\n\n  /** Loading animations to play before loading starts for emoji-style loading. */\n  getStartAnimationsForEmojiWidgetLoading(): TimelineMax {\n    let loadingStartTimeline = new TimelineMax({});\n    // Reset to the first layer if we're not already there.\n    if (this.currentLayerIndex !== 0) {\n      loadingStartTimeline.add(\n        this.getTransitionToLayerAnimation(0, LAYER_TRANSITION_TIME_SECONDS));\n    }\n    // Update visibility of the emoji icon before starting; it could have\n    // disappeared due to certain settings, and in some of these cases it\n    // needs to reappear before loading animation begins.\n    loadingStartTimeline.add(\n      this.getUpdateStatusWidgetVisibilityAnimation(true));\n\n    loadingStartTimeline.add(\n      this.getFadeDetailsAnimation(FADE_DETAILS_TIME_SECONDS, true, 0));\n    loadingStartTimeline.add([\n      this.getHideEmojisAnimation(),\n      // Change color of the emoji background back to the yellow color before\n      // the main loading (it could be gray from being in a neutral state).\n      this.getChangeColorAnimation(\n        COLOR_CHANGE_LOADING_ANIMATION_TIME_SECONDS, EMOJI_COLOR)\n    ]);\n\n    return loadingStartTimeline;\n  }\n\n  /** Loopable loading animations to play for emoji-style loading. */\n  getLoopAnimationForEmojiWidgetLoading(): TimelineMax {\n    let shrinkAndFadeTimeline = new TimelineMax({\n      // Apply ease\n      ease: Power3.easeInOut\n    });\n    shrinkAndFadeTimeline.add(\n      this.getFadeAndShrinkAnimation(FADE_ANIMATION_TIME_SECONDS, true));\n    return shrinkAndFadeTimeline;\n  }\n\n  /** Loading animations to play when loading finishes for emoji-style loading. */\n  getEndAnimationsForEmojiWidgetLoading(loadingTimeline: TimelineMax): TimelineMax {\n    let loadingEndTimeline = new TimelineMax({\n      onComplete: () => {\n        this.ngZone.run(()=> {\n          console.debug('Setting this.isPlayingLoadingAnimation = false (emoji)');\n          this.isPlayingLoadingAnimation = false;\n          loadingTimeline.clear();\n          this.scoreChangeAnimationCompleted.emit();\n          if (this.isLoading) {\n            // If we finish the end loading animation and we're supposed\n            // to be loading again, restart the loading animation!\n            console.debug('Restarting loading from ending animation completion');\n            this.setLoading(true);\n          } else if (this.currentEmoji !== this.getEmojiForScore(this.score)) {\n            // The score has changed between now and when the animation\n            // started (the emoji is no longer valid).\n            console.debug(\n              'Load ending animation completed, found an out of date shape');\n            this.notifyScoreChange(this.score);\n          }\n        });\n      }\n    });\n    let scoreCompletedAnimations: Animation[] = [];\n    scoreCompletedAnimations.push(this.getShowEmojiAnimation());\n    scoreCompletedAnimations.push(\n      this.getFadeDetailsAnimation(FADE_DETAILS_TIME_SECONDS, false, 0));\n\n    // If we're revealing the status widget, play the reveal animation\n    // before the update emoji animation.\n    if (!this.getShouldHideStatusWidget(false)) {\n      loadingEndTimeline.add(\n        this.getUpdateStatusWidgetVisibilityAnimation(false));\n    }\n\n    loadingEndTimeline.add(scoreCompletedAnimations);\n\n    // If we're hiding the status widget, play the hide widget\n    // animation after the update emoji animation.\n    if (this.getShouldHideStatusWidget(false)) {\n      loadingEndTimeline.add(\n        this.getUpdateStatusWidgetVisibilityAnimation(false));\n    }\n\n    if (this.pendingPostLoadingStateChangeAnimations) {\n      loadingEndTimeline.add(\n        this.pendingPostLoadingStateChangeAnimations);\n    }\n    return loadingEndTimeline;\n  }\n\n  /**\n   * Loading animations to play before loading starts for\n   * circle/square/diamond-style loading.\n   */\n  getStartAnimationsForCircleSquareDiamondWidgetLoading(): TimelineMax {\n    let startAnimationsTimeline = new TimelineMax({\n      align: 'sequence',\n    });\n\n    // Start animations happen in three groups. Group 0 animations before\n    // group 1, which animates before group 2. The animations within each\n    // group start at the same time.\n    let startAnimationsGroup0: Animation[] = [];\n    let startAnimationsGroup1: Animation[] = [];\n    let startAnimationsGroup2: Animation[] = [];\n\n    // Update visibility of the status widget before starting; it could have\n    // disappeared due to certain settings, and in some of these cases it\n    // needs to reappear before loading animation begins.\n    startAnimationsGroup0.push(\n      this.getUpdateStatusWidgetVisibilityAnimation(true));\n\n    startAnimationsGroup2.push(\n      this.getToGrayScaleAnimation(GRAYSCALE_ANIMATION_TIME_SECONDS));\n    if (this.showScore) {\n      if (this.currentLayerIndex !== 0) {\n        startAnimationsGroup1.push(\n          this.getTransitionToLayerAnimation(0, LAYER_TRANSITION_TIME_SECONDS));\n      }\n\n      startAnimationsGroup2.push(\n        this.getFadeDetailsAnimation(FADE_DETAILS_TIME_SECONDS, true, 0));\n    }\n    startAnimationsTimeline.add(startAnimationsGroup0);\n    startAnimationsTimeline.add(startAnimationsGroup1);\n    startAnimationsTimeline.add(startAnimationsGroup2);\n    return startAnimationsTimeline;\n  }\n\n  /**\n   * Main loading animation to play on loop for the circle/square/diamond style\n   * loading.\n   */\n  getLoopAnimationsForCircleSquareDiamondWidgetLoading(): TimelineMax {\n    let shrinkAndFadeTimeline = new TimelineMax({\n      // Apply ease.\n      ease: Power3.easeInOut\n    });\n    shrinkAndFadeTimeline.add(\n      this.getFadeAndShrinkAnimation(FADE_ANIMATION_TIME_SECONDS, true));\n    return shrinkAndFadeTimeline;\n  }\n\n  /**\n   * Loading animations to play when loading finishes for\n   * circle/square/diamond-style loading.\n   */\n  getEndAnimationsForCircleSquareDiamondWidgetLoading(\n      loadingTimeline: TimelineMax): TimelineMax {\n    let updateScoreCompletedTimeline = new TimelineMax({\n      onStart: () => {\n        console.debug('Score change animation start');\n      },\n      onComplete: () => {\n        this.ngZone.run(() => {\n          console.debug('Score change animation end');\n          console.debug('Clearing loadingTimeline');\n          this.isPlayingLoadingAnimation = false;\n          loadingTimeline.clear();\n          this.scoreChangeAnimationCompleted.emit();\n          if (this.isLoading) {\n            // If we finish the end loading animation and we're supposed\n            // to be loading again, restart the loading animation!\n            console.debug('Restarting loading from ending animation completion');\n            this.setLoading(true);\n          } else if (this.currentShape !== this.getShapeForScore(this.score)) {\n            // The score has changed between now and when the animation\n            // started (the shape is no longer valid).\n            console.debug(\n              'Load ending animation completed, found an out of date shape');\n            this.notifyScoreChange(this.score);\n          }\n        });\n      }\n    });\n    let scoreCompletedAnimations: Animation[] = [];\n    scoreCompletedAnimations.push(\n      this.getUpdateShapeAnimation(this.score));\n\n    if (this.showScore) {\n      scoreCompletedAnimations.push(\n        this.getFadeDetailsAnimation(\n          FADE_DETAILS_TIME_SECONDS, false, 0));\n    }\n\n    // If we're revealing the status widget, play the reveal animation\n    // before the update shape animation.\n    if (!this.getShouldHideStatusWidget(false)) {\n      updateScoreCompletedTimeline.add(\n        this.getUpdateStatusWidgetVisibilityAnimation(false));\n    }\n\n    updateScoreCompletedTimeline.add(scoreCompletedAnimations);\n\n    // If we're hiding the status widget, play the hide widget\n    // animation after the update shape animation.\n    if (this.getShouldHideStatusWidget(false)) {\n      updateScoreCompletedTimeline.add(\n        this.getUpdateStatusWidgetVisibilityAnimation(false));\n    }\n\n    if (this.pendingPostLoadingStateChangeAnimations) {\n      updateScoreCompletedTimeline.add(\n        this.pendingPostLoadingStateChangeAnimations);\n    }\n\n    return updateScoreCompletedTimeline;\n  }\n\n  setLoadingForEmojiWidget(loading: boolean): void {\n    if (loading && !this.isPlayingLoadingAnimation) {\n      this.isPlayingLoadingAnimation = true;\n      let loadingTimeline = new TimelineMax({\n        paused:true,\n        ease: Power3.easeInOut,\n        onStart: () => {\n          this.ngZone.run(() => {\n            console.debug('Starting timeline (emoji)');\n          });\n        },\n        onComplete: () => {\n          this.ngZone.run(() => {\n            console.debug('Completing timeline (emoji)');\n            if (this.isLoading) {\n              console.debug('Restarting main emoji loading animation');\n              loadingTimeline.seek(EMOJI_MAIN_LOADING_ANIMATION_LABEL, true);\n            } else {\n              this.getEndAnimationsForEmojiWidgetLoading(loadingTimeline).play();\n            }\n          });\n        }\n      });\n\n      loadingTimeline.add(this.getStartAnimationsForEmojiWidgetLoading());\n      loadingTimeline.add(this.getLoopAnimationForEmojiWidgetLoading(),\n                          EMOJI_MAIN_LOADING_ANIMATION_LABEL);\n      loadingTimeline.play();\n    }\n  }\n\n  setLoadingForDefaultWidget(loading: boolean): void {\n    if (loading && !this.isPlayingLoadingAnimation) {\n      console.debug('About to create loadingTimeline');\n      // Set isPlayingLoadingAnimation = true here instead of in the onStart()\n      // of the animation, so that the animation does not start twice if this\n      // function gets called twice in rapid succession.\n      this.isPlayingLoadingAnimation = true;\n\n      let loadingTimeline = new TimelineMax({\n        paused:true,\n        ease: Power3.easeInOut,\n        onStart: () => {\n          this.ngZone.run(() => {\n            console.debug('Starting timeline');\n          });\n        },\n        onComplete: () => {\n          this.ngZone.run(() => {\n            console.debug('Completing timeline');\n            console.debug('Updating shape from animation complete');\n            if (this.isLoading) {\n              // TODO(rachelrosen): Consider the edge case where\n              // isPlayingShowOrHideLoadingWidgetAnimation is true here. It's\n              // not ever getting triggered in the existing logs and might not\n              // be possible to hit now, but could become an issue later.\n              console.debug('Restarting loading to fade animation.');\n              loadingTimeline.seek(FADE_START_LABEL, true);\n            } else {\n              console.debug('Loading complete');\n              console.debug('hasScore:', this.hasScore);\n              let updateScoreCompletedTimeline =\n                this.getEndAnimationsForCircleSquareDiamondWidgetLoading(\n                  loadingTimeline);\n              updateScoreCompletedTimeline.play();\n            }\n          });\n        },\n      });\n      let startAnimationsTimeline =\n        this.getStartAnimationsForCircleSquareDiamondWidgetLoading();\n      loadingTimeline.add(startAnimationsTimeline, LOADING_START_ANIMATIONS_LABEL);\n\n      loadingTimeline.add(\n        this.getLoopAnimationsForCircleSquareDiamondWidgetLoading(), FADE_START_LABEL);\n      loadingTimeline.play();\n    }\n  }\n\n  private getNameFromShape(shape: Shape): string {\n    if (shape == Shape.CIRCLE) {\n      return 'circle';\n    } else if (shape == Shape.SQUARE) {\n      return 'square';\n    } else {\n      return 'diamond';\n    }\n  }\n\n  private getAccessibilityDescriptionForShape(shape: Shape): string {\n    if (shape == Shape.CIRCLE) {\n      return 'Low toxicity icon.';\n    } else if (shape == Shape.SQUARE) {\n      return 'Medium toxicity icon.';\n    } else {\n      return 'High toxicity icon.';\n    }\n  }\n\n  private getUpdateGradientColorAnimation(timeSeconds: number): TweenMax {\n    return this.getChangeColorAnimation(\n      timeSeconds, this.interpolateColors(this.score));\n  }\n\n  private getChangeColorAnimation(timeSeconds: number, color: string): TweenMax {\n    return TweenMax.to(this.widgetElement, timeSeconds, {\n      backgroundColor: color,\n    });\n  }\n\n  private getTransitionToCircleAnimation(timeSeconds: number, endColor?: string) {\n    let circleAnimationTimeline = new TimelineMax({\n      align: 'start',\n      onStart: () => {\n      },\n      onComplete: () => {\n      },\n    });\n    circleAnimationTimeline.add([\n      this.getCircleAnimation(timeSeconds / 6, endColor),\n      this.getToFullScaleBounceAnimation(timeSeconds)\n    ]);\n    return circleAnimationTimeline;\n  }\n\n  private getTransitionToSquareAnimation(timeSeconds: number) {\n    let squareAnimationTimeline = new TimelineMax({\n      onStart: () => {\n        let currentRotation = 0;\n        let currentWidgetTransform = (this.widgetElement as any)._gsTransform;\n        if (currentWidgetTransform !== undefined) {\n          currentRotation = currentWidgetTransform.rotation;\n        }\n        console.debug('getTransitionToSquare; Current rotation:', currentRotation);\n      },\n      onComplete: () => {\n      },\n    });\n    let previousShape = this.currentShape;\n    squareAnimationTimeline.add([\n      this.getSquareAnimation(timeSeconds / 4),\n      this.getToFullScaleCompleteRotationAnimation(timeSeconds, previousShape)\n    ]);\n    return squareAnimationTimeline;\n  }\n\n  private getTransitionToDiamondAnimation(timeSeconds: number) {\n    let diamondAnimationTimeline = new TimelineMax({\n      onStart: () => {\n      },\n      onComplete: () => {\n      },\n    });\n    diamondAnimationTimeline.add([\n      this.getDiamondAnimation(timeSeconds / 6),\n      this.getToFullScaleAnimation(timeSeconds / 6),\n    ]);\n    diamondAnimationTimeline.add(\n      this.getRotateBackAndForthAnimation(timeSeconds / 6, 85));\n    diamondAnimationTimeline.add(\n      this.getRotateBackAndForthAnimation(timeSeconds / 6, 5));\n    diamondAnimationTimeline.add(\n      this.getRotateBackAndForthAnimation(timeSeconds / 6, 65));\n    diamondAnimationTimeline.add(\n      this.getRotateBackAndForthAnimation(timeSeconds / 6, 25));\n    diamondAnimationTimeline.add(\n      this.getRotateBackAndForthAnimation(timeSeconds / 6, 45));\n    return diamondAnimationTimeline;\n  }\n\n  private getRotateBackAndForthAnimation(timeSeconds: number, degrees: number) {\n    return TweenMax.to(this.widgetElement, timeSeconds, {\n      rotation: degrees,\n      onStart: () => {\n        console.debug('Starting rotate back and forth animation');\n      },\n      onComplete: () => {\n        console.debug('Rotate back and forth animation completed');\n      },\n    });\n  }\n\n  private getToFullScaleBounceAnimation(timeSeconds: number) {\n    return TweenMax.to(this.widgetElement, timeSeconds, {\n      scaleX: 1,\n      scaleY: 1,\n      ease: Elastic.easeOut.config(1, 0.3),\n      onStart: () => {\n        console.debug('Starting get to full scale bounce animation');\n      },\n      onComplete: () => {\n        console.debug('Get to full scale bounce animation completed');\n      },\n    });\n  }\n\n  private getToFullScaleAnimation(timeSeconds: number) {\n    return TweenMax.to(this.widgetElement, timeSeconds, {\n      scaleX: 1,\n      scaleY: 1,\n      onStart: () => {\n        console.debug('Starting get to full scale animation');\n      },\n      onComplete: () => {\n        console.debug('Get to full scale animation completed');\n      },\n    });\n  }\n\n  private getToFullScaleCompleteRotationAnimation(timeSeconds: number, fromShape: Shape) {\n    let currentRotation = 0;\n    let currentWidgetTransform = (this.widgetElement as any)._gsTransform;\n    if (currentWidgetTransform !== undefined) {\n      currentRotation = currentWidgetTransform.rotation;\n    }\n    console.debug('Current rotation:', currentRotation);\n    console.debug('From shape:', this.getNameFromShape(fromShape));\n    let rotationDegrees = fromShape === Shape.DIAMOND ? 315 : 360;\n    return TweenMax.to(this.widgetElement, timeSeconds, {\n      rotation: \"+=\" + rotationDegrees + \"_ccw\",\n      scaleX: 1,\n      scaleY: 1,\n      ease: Elastic.easeOut.config(1, 0.3),\n      onStart: () => {\n        console.debug('Starting get to full scale complete rotation animation');\n      },\n      onComplete: () => {\n        console.debug('Get to full scale complete rotation animation completed');\n      },\n    });\n  }\n\n  private getTransitionToLayerAnimation(endLayerIndex: number, timeSeconds: number): Animation {\n    this.layerHeightPixels = this.layerAnimationHandles[this.currentLayerIndex].offsetHeight;\n\n    let timeline = new TimelineMax({\n      onStart: () => {\n        this.ngZone.run(() => {\n          console.debug('Transitioning from layer ' + this.currentLayerIndex\n                        + ' to layer ' + endLayerIndex);\n          this.layersAnimating = true;\n        });\n      },\n      onComplete: () => {\n        this.ngZone.run(() => {\n          this.layersAnimating = false;\n          this.currentLayerIndex = endLayerIndex;\n          console.debug('Finished transitioning to layer ' + this.currentLayerIndex);\n          this.showingMoreInfo = this.currentLayerIndex === 1;\n          this.updateLayerElementContainers();\n        });\n      },\n    });\n\n    if (this.currentLayerIndex === endLayerIndex) {\n      return timeline;\n    }\n\n    let startLayer = this.layerAnimationHandles[this.currentLayerIndex];\n    let endLayer = this.layerAnimationHandles[endLayerIndex];\n    if (this.currentLayerIndex < endLayerIndex) {\n      timeline.add([\n        this.getShiftLayerVerticallyAnimation(startLayer, timeSeconds, 0, -1 * this.layerHeightPixels, false),\n        this.getShiftLayerVerticallyAnimation(endLayer, timeSeconds, this.layerHeightPixels, 0, true),\n      ])\n    } else {\n      timeline.add([\n        this.getShiftLayerVerticallyAnimation(startLayer, 1, 0, this.layerHeightPixels, false),\n        this.getShiftLayerVerticallyAnimation(endLayer, 1, -1 * this.layerHeightPixels, 0, true),\n      ])\n    }\n\n    return timeline;\n  }\n\n  private getShiftLayerVerticallyAnimation(layer: HTMLElement, timeSeconds: number,\n                                        startY: number, endY: number, fadeIn: boolean) {\n    return TweenMax.fromTo(\n      layer, timeSeconds,{y: startY, opacity: fadeIn ? 0 : 1}, {y: endY, opacity: fadeIn ? 1 : 0});\n  }\n\n  private getCircleAnimation(timeSeconds: number, endColor?: string) {\n    if (!endColor) {\n      endColor = this.interpolateColors(this.score);\n    }\n    return TweenMax.to(this.widgetElement, timeSeconds, {\n      rotation: 0,\n      borderRadius: \"50%\",\n      backgroundColor: endColor,\n      onStart: () => {\n        console.debug('Loading animation: Morphing to circle from '\n                     + this.getNameFromShape(\n           this.currentShape));\n        this.currentShape = Shape.CIRCLE;\n      },\n      onComplete: () => {\n        console.debug('Loading animation: done morphing to circle.');\n      },\n    });\n  }\n\n  private getSquareAnimation(timeSeconds: number) {\n    return TweenMax.to(this.widgetElement, timeSeconds, {\n      rotation: 0,\n      borderRadius: 0,\n      backgroundColor: this.interpolateColors(this.score),\n      onStart: () => {\n        console.debug('Morphing to square from ' + this.getNameFromShape(\n           this.currentShape));\n        this.currentShape = Shape.SQUARE;\n      },\n      onComplete: () => {\n        console.debug('Done morphing to square');\n      },\n    });\n\n  }\n\n  private getDiamondAnimation(timeSeconds: number) {\n    return TweenMax.to(this.widgetElement, timeSeconds, {\n      borderRadius: 0,\n      rotation: 45,\n      backgroundColor: this.interpolateColors(this.score),\n      onStart: () => {\n        console.debug('Morphing to diamond from ' + this.getNameFromShape(\n           this.currentShape));\n        this.currentShape = Shape.DIAMOND;\n      },\n      onComplete: () => {\n        console.debug('Done morphing to diamond.');\n      },\n    });\n  }\n\n  private getToGrayScaleAnimation(timeSeconds: number) {\n    return TweenMax.to(this.widgetElement, timeSeconds, {\n      backgroundColor: GRAY_COLOR_CIRCLE_LOADING,\n    });\n  }\n\n  private getFadeAndShrinkAnimation(timeSeconds: number, repeat: boolean) {\n    return TweenMax.to(this.widgetElement, timeSeconds, {\n      repeat: repeat ? 1 : 0,\n      backgroundColor: \"rgba(227,229,230,0.54)\",\n      scaleX: 0.5,\n      scaleY: 0.5,\n      yoyo: repeat,\n      onStart: () => {\n        console.debug('Loading animation: fade in and out start');\n      },\n      onComplete: () => {\n        console.debug('Loading animation: fade in and out complete');\n      },\n    });\n  }\n\n  private getFadeDetailsAnimation(timeSeconds: number, hide: boolean,\n                                  layerIndex: number) {\n    let timeline = new TimelineMax({\n      onStart: () => {\n        this.ngZone.run(() => {\n          console.debug('Calling getFadeDetails animation, fadeOut=' + hide\n                        + ' and current layer index = ' + this.currentLayerIndex);\n          this.isPlayingFadeDetailsAnimation = true;\n        });\n      },\n      onComplete: () => {\n        this.ngZone.run(() => {\n          console.debug('Fade details animation complete');\n          this.isPlayingFadeDetailsAnimation = false;\n        });\n      },\n    });\n    let interactiveLayerControlsContainer =\n      this.elementRef.nativeElement.querySelector(\n        this.layerAnimationSelectors[layerIndex] + ' .interactiveElement');\n    let layerTextContainer = this.elementRef.nativeElement.querySelector(\n          this.layerAnimationSelectors[layerIndex] + ' .layerText');\n\n    timeline.add([\n      TweenMax.to(interactiveLayerControlsContainer, timeSeconds,\n                  { opacity: (hide ? 0 : 1) }),\n      TweenMax.to(layerTextContainer, timeSeconds,\n                  { opacity: (hide ? 0 : 1) }),\n    ], 0, 'normal', 0);\n    return timeline;\n  }\n}\n\nexport interface CommentFeedback {\n  // True if the user clicked \"yes\" when leaving feedback on whether the comment\n  // was toxic after clicking the \"Seem wrong?\" button. This is used to\n  // differentiate between false positives and false negatives in the comment scores.\n  commentMarkedAsToxic: boolean;\n}\n"
  ],
  "names": [
    "tslib_1.__values",
    "color",
    "d3.interpolateRgb",
    "toxicLibsJS.color"
  ],
  "mappings": "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"
}
